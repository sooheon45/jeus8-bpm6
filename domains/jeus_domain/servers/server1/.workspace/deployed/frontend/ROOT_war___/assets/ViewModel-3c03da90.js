import{_ as g,B as D,s as y,u as p,v,r as _,o as f,e as d,w as M,f as b}from"./index-7b37f28a.js";import{d as P}from"./index-8f33dbb8.js";import{_ as x,a as h,P as u,b as C,c as w,d as j}from"./ProcessDefinitionGenerator-5040ccf8.js";import{P as I}from"./ProcessDefinition-8367c465.js";import{c as N,_ as S}from"./index-4118e607.js";import{_ as k,a as L}from"./ChatProfile-ae681fa1.js";import{_ as O}from"./AppBaseCard.vue_vue_type_style_index_0_lang-764d25b8.js";import{C as X}from"./Chat-127d4b0d.js";import"./FormDesignGenerator-cf42b57e.js";import"./FormDefinitionModule-1faf025f.js";import"./VSlider-11543daf.js";import"./index-5e2cd834.js";import"./hooks.module-5c2ff6dd.js";import"./WorkItem-328dcf85.js";import"./DefaultForm-027b9cf9.js";import"./DynamicForm-9e8c830e.js";import"./customizer-3521e2ce.js";import"./VSheet-beabeb52.js";import"./OrganizationChart-bfb9b6f3.js";import"./VBadge-0c68c2c9.js";import"./chat-icon-2658168f.js";import"./VDatePicker-b7697b5c.js";const c=D.createBackend();N({objectHash:function(t,e){return"$$index:"+e}});const A={mixins:[y,x,h],name:"ProcessDefinitionChat",components:{Chat:X,AppBaseCard:O,ChatListing:k,ChatDetail:S,ChatProfile:L,ProcessDefinition:I,ChatGenerator:u,ProcessDefinitionVersionDialog:C,ProcessDefinitionVersionManager:w,ProcessDefinitionChatHeader:j,ProcessDefinitionConvertModule:h},data:()=>({isXmlMode:!1,prompt:"",changedXML:"",path:"proc_def",isChanged:!1,chatInfo:{title:"processDefinition.cardTitle",text:"processDefinition.processDefinitionExplanation"},processDefinitionMap:null,modeler:null,editUser:"",versionDialog:!1,verMangerDialog:!1,deleteDialog:!1,isDeleted:!1,externalSystems:[],validationList:{}}),async created(){$try(async()=>{if(await this.init(),this.generator=new u(this,{isStream:!0,preferredLanguage:"Korean"}),this.$store.state.messages){const t=JSON.stringify(this.$store.state.messages);this.prompt=`아래 대화 내용에서 프로세스를 유추하여 프로세스 정의를 생성해주세요. 이때 가능한 프로세스를 일반화하여 작성:
                ${t}.`,this.$store.commit("clearMessages")}if(this.$store.state.editMessages){const t=JSON.stringify(this.$store.state.editMessages);this.prompt=`아래 대화 내용을 보고 기존 프로세스에서 수정 가능한 부분을 유추하여 프로세스 정의를 수정해주세요.
                ${t}.`,this.$store.commit("clearMessages")}this.fullPath&&this.fullPath!=""&&(this.chatRoomId=this.fullPath)})},watch:{$route:{deep:!0,handler(t,e){if(t.path!==e.path){if(!(t.path.startsWith("/definitions")||t.path.startsWith("/forms")))return;this.messages=[],t.params.pathMatch&&this.init()}}}},computed:{fullPath(){let t=this.$route.params.pathMatch.join("/");return t.startsWith("/")&&(t=fullPath.substring(1)),t},isAdmin(){return localStorage.getItem("isAdmin")==="true"}},async beforeRouteLeave(t,e,i){const s=await p().getModeler.saveXML({format:!0,preamble:!0});e.path==="/definitions/chat"&&s&&s.xml&&!this.isViewMode?window.confirm("You have unsaved changes. Are you sure you want to leave?")?i():i(!1):i()},methods:{showXmlMode(){this.isXmlMode=!this.isXmlMode},beforeDelete(){this.bpmn&&(this.deleteDialog=!0)},async deleteProcess(){var t=this;t.$try({context:t,action:async()=>{await c.deleteDefinition(t.fullPath),t.deleteDialog=!1,t.isDeleted=!0,t.EventBus.emit("definitions-updated")}})},handleFileChange(t){let e=this;const i=t.target.files[0];if(!i)return;const n=new FileReader;n.onload=a=>{const s=a.target.result;let o=s,r="";i.name.indexOf(".jsonold")!=-1&&(o=e.convertOldJson(JSON.parse(s)),r=e.createBpmnXml(o)),e.loadBPMN(r)},n.readAsText(i)},checkedLock(t){var e=this;e.$try({context:e,action:async()=>{const i=await e.getData(`lock/${t}`,{key:"id"});i&&i.id&&i.user_id?(e.editUser=i.user_id,i.user_id==this.userInfo.name?(e.lock=!1,e.disableChat=!1,e.isViewMode=!1):(e.lock=!0,e.disableChat=!0,e.isViewMode=!0)):(e.editUser="",e.lock=!0,e.disableChat=!0,e.isViewMode=!0)}})},toggleLock(){var t=this;t.$try({context:t,action:async()=>{t.lock?(t.processDefinition&&t.useLock&&await t.storage.putObject("lock",{id:t.processDefinition.processDefinitionId,user_id:t.userInfo.name}),t.editUser=t.userInfo.name,t.disableChat=!1,t.isViewMode=!1,t.lock=!1,t.definitionChangeCount++):t.toggleVersionDialog(!0)}})},toggleVerMangerDialog(t){this.verMangerDialog=t},async changeXML(t){var e=this;t&&t.id&&(t.xml&&(e.processDefinition=await e.convertXMLToJSON(t.xml)),await e.storage.putObject("proc_def",{id:t.id,name:t.name,bpmn:t.xml,definition:e.processDefinition}),e.bpmn=t.xml,e.definitionChangeCount++,e.toggleVerMangerDialog(!1))},async changeElement(){this.$nextTick(async()=>{const i=await p().getModeler.saveXML({format:!0,preamble:!0});this.validationList=await c.validate(i.xml)})},loadBPMN(t){this.bpmn=t,this.definitionChangeCount++},removePositionKey(t){if(Array.isArray(t))return t.map(e=>removePositionKey(e));if(typeof t=="object"&&t!==null){const e={};return Object.keys(t).forEach(i=>{i!=="position"&&(e[i]=removePositionKey(t[i]))}),e}return t},async updateDefinition(){let i=await p().getModeler.saveXML({format:!0,preamble:!0});console.log(i.xml),this.bpmn=i.xml,this.definitionChangeCount++,this.isChanged=!0},async loadData(t){const e=this;try{const i=await c.getSystemList();i&&i.forEach(async s=>{const o=await c.getSystem(s.name.replace(".json",""));e.externalSystems.push(o)}),e.isDeleted=!1;let n=e.$route.params.pathMatch.join("/");n.startsWith("/")&&(n=n.substring(1));let a=this.$route.params.pathMatch[this.$route.params.pathMatch.length-1];if(n&&a!="chat"){let s=await c.getRawDefinition(n,{type:"bpmn"});if(s&&(e.bpmn=s,e.definitionChangeCount++),e.useLock){const o=await c.getRawDefinition(n);o&&(e.processDefinition=o.definition,e.processDefinition.processDefinitionId=o.id,e.processDefinition.processDefinitionName=o.name,e.projectName=e.processDefinition.processDefinitionName),e.checkedLock(a)}else e.processDefinition=await e.convertXMLToJSON(e.bpmn),e.processDefinition.processDefinitionId=n,e.processDefinition.processDefinitionName=n}else a=="chat"&&(e.projectName=null,e.bpmn=null,e.processDefinition=await e.convertXMLToJSON(e.bpmn),e.$route.query&&e.$route.query.id&&(e.processDefinition={processDefinitionId:e.$route.query.id},e.$route.query.name&&(e.projectName=e.$route.query.name,e.processDefinition.processDefinitionName=e.projectName)),e.lock=!1,e.disableChat=!1,e.isViewMode=!1,e.definitionChangeCount++);e.$route.query&&e.$route.query.modeling&&(document.title=e.projectName),e.processDefinitionMap=await c.getProcessDefinitionMap()}catch(i){console.log(i),alert(i)}},beforeSendMessage(t){this.processDefinitionMap&&this.generator.setProcessDefinitionMap(this.processDefinitionMap),this.processDefinition&&this.generator.setProcessDefinition(this.processDefinition),this.sendMessage(t)},extractPropertyNameAndIndex(t){let e;return e=t.match(/^\$\.(\w+)\[(\d+)\]$/),e?{propertyName:e[1],index:parseInt(e[2],10)}:(e=t.match(/^\$\.(\w+)\[\?(.*)\]$/),e?{propertyName:e[1],index:e.index}:null)},modificationAdd(t){let e=this.extractPropertyNameAndIndex(t.targetJsonPath);e?this.processDefinition[e.propertyName].splice(e.index,0,t.value):this.processDefinition[t.targetJsonPath.replace("$.","")]&&this.processDefinition[t.targetJsonPath.replace("$.","")].push(t.value)},modificationReplace(t){let e=this.extractPropertyNameAndIndex(t.targetJsonPath);this.processDefinition[e.propertyName][e.index]=t.value},modificationRemove(t,e){if(t.value){const n=e.get("modeling"),a=e.get("elementRegistry");console.log("********"),console.log(t),console.log("********");var i=a.get(t.value.id);n.removeElements([i])}},async afterModelCreated(t){let e;try{if(e=this.extractJSON(t),e){let i=v(e);i.processDefinitionId&&(this.processDefinition=i,this.bpmn=this.createBpmnXml(this.processDefinition),this.definitionChangeCount++)}}catch(i){console.log(e),console.log(i)}},async afterGenerationFinished(t){let e=null;if(typeof t=="string"?e=JSON.parse(t):e=t,e){let i=e;i.megaProcessId&&this.processDefinitionMap&&this.processDefinitionMap.mega_proc_list&&(this.processDefinitionMap.mega_proc_list.some(s=>s.name==i.megaProcessId)||this.processDefinitionMap.mega_proc_list.push({name:i.megaProcessId,id:i.megaProcessId,major_proc_list:[{name:i.majorProcessId,id:i.majorProcessId,sub_proc_list:[{id:i.processDefinitionId,name:i.processDefinitionName}]}]}),i.majorProcessId&&this.processDefinitionMap.mega_proc_list.forEach(s=>{if(s.name==i.megaProcessId)if(s.major_proc_list.some(o=>o.name==i.majorProcessId)){const o=s.major_proc_list.findIndex(r=>r.name==i.majorProcessId);s.major_proc_list[o].sub_proc_list.some(r=>r.id==i.processDefinitionId)||s.major_proc_list[o].sub_proc_list.push({id:i.processDefinitionId,name:i.processDefinitionName})}else s.major_proc_list.push({name:i.majorProcessId,id:i.majorProcessId,sub_proc_list:[{id:i.processDefinitionId,name:i.processDefinitionName}]})}));const a=p().getModeler;if(i.modifications){for(let s of i.modifications)if(s.action=="replace")this.jsonPathReplace(this.processDefinition,s.targetJsonPath,s.value),console.log(this.processDefinition),this.bpmn=this.createBpmnXml(this.processDefinition);else if(s.action=="add"){this.modificationAdd(s),this.modificationElement(s,a);let o=await a.saveXML({format:!0,preamble:!0});this.bpmn=o.xml,console.log("done")}else if(s.action=="delete"){this.modificationRemove(s,a);let o=await a.saveXML({format:!0,preamble:!0});this.bpmn=o.xml}this.definitionChangeCount++}}this.isChanged=!0},modificationElement(t,e){console.log(t),e.get("bpmnFactory");const i=e.get("elementFactory"),n=e.get("canvas"),a=e.get("modeling"),s=e.get("elementRegistry");if(t.targetJsonPath.includes("components")){var o=n.getRootElement(),r=i.createShape({type:`bpmn:${t.value.componentType}`,id:t.value.id,x:0,y:0});r.businessObject.set("name",t.value.name),r.businessObject.set("id",t.value.id),a.createShape(r,{id:t.value.id,x:t.value.x?t.value.x:0,y:t.value.y?t.value.y:0},o.children[0]),this.extendUEngineProperties(r.businessObject,t,e)}if(t.targetJsonPath.includes("sequences")){var l=s.get(t.value.source),m=s.get(t.value.target);i.createConnection({type:"bpmn:SequenceFlow",source:l,target:m}),a.connect(l,m)}},extendUEngineProperties(t,e,i){var o;if((o=t.extensionElements)!=null&&o.values)return;const n=i.get("bpmnFactory"),a=n.create("uengine:Properties",{json:""});a.json=JSON.stringify(e.value.spec);const s=n.create("bpmn:ExtensionElements");s.get("values").push(a),t.set("extensionElements",s)},afterModelStopped(t){},async saveToVectorStore(t){await new P.VectorStorage({openAIApiKey:this.openaiToken}).addText(JSON.stringify(t),{category:t.processDefinitionId})},generateElement(t,e,i,n,a,s,o){var r=this;const l=r.getComponentByName(t);return l?(s||(s=r.uuid()),e||(e=500),i||(e=500),o||(o=null),l.computed.createNew(o,s,e,i,n,a)):null},getComponentByName:function(t){var e;return $.each(window.bpmnComponents,function(i,n){n.default.name==t&&(e=n)}),e}}};function J(t,e,i,n,a,s){const o=_("process-definition");return f(),d(b,{elevation:"10",style:{"background-color":"rgba(255, 255, 255, 0)",height:"calc(100vh - 20px)"}},{default:M(()=>[(f(),d(o,{class:"process-definition-resize",bpmn:t.bpmn,processDefinition:t.processDefinition,key:t.definitionChangeCount,isViewMode:!0,isXmlMode:t.isXmlMode,definitionPath:s.fullPath,definitionChat:this,validationList:t.validationList,isAdmin:s.isAdmin,onUpdate:s.updateDefinition,onChange:s.changeElement},null,8,["bpmn","processDefinition","isXmlMode","definitionPath","validationList","isAdmin","onUpdate","onChange"]))]),_:1})}const ae=g(A,[["render",J],["__scopeId","data-v-cfd313f2"]]);export{ae as default};
