-@ val createMode: Boolean = false
-@ val model: DestinationType
-@ val __messageSorts: List[String]

- layout("/WEB-INF/scalate/layouts/main.scaml", Map("title" -> "message:servers.destination.title"))
	- J.base = "domain.server-templates.server-template.jms-resource.destination"
	- render("/WEB-INF/scalate/menu/server-template.scaml", Map("first" -> 1, "second" -> 0))

	%form(method="post" action="#{requestUri}")
		- J.render("createMode")
		
		- J.render("fieldIcons")
		- J.render("buttons")

		- J.layout("basic")
			.table
				- J.field(schema = ".name")
					- if (createMode)
						- J.input()
					- else
						= model.getName()
				- J.field(schema = ".type")
					- J.select()
				- J.field(schema = ".export-name")
					- J.input()
				- J.field(schema = ".subscription-limit")
					- J.input()
				- J.field(schema = ".quota")
					- J.input()
				- J.field(schema = ".max-pending-limit")
					- J.input()
				- J.field(schema = ".resume-dispatch-factor")
					- J.input()
				- J.field(schema = ".message-sort")
					- J.select(options = null :: __messageSorts)
				- J.field(schema = ".dead-letter-destination")
					- J.input()
				- J.field(schema = ".expiration-policy")
					- J.select()
				- J.field(schema = ".redelivery-delay")
					- J.input()
					%span.unit = S.message("common.s")
			- J.group(schema = ".message-group")
				.table
					- J.field(schema = ".message-handling")
						- J.select()
					- J.field(schema = ".expiration-time")
						- J.input()
						%span.unit = S.message("common.s")
			- J.group(schema = ".override-client-attributes")
				.table
					- J.field(schema = ".expiration-time")
						- J.input()
						%span.unit = S.message("common.s")

		.lineBar
		- J.render("buttons")
