- import jeus.tool.webadmin.tags.Menu
- import jeus.tool.webadmin.Environment

- def renderMenus(menus: List[Menu])
	- menus match
		- case null | Nil =>
		- case _ => 
			%ul
				- menus.foreach(renderMenu)

- 
	def checkSelect(target: String, url: String): Boolean = {
		if(target == url) {
			true
		} else {
			target.startsWith(if(url.endsWith("/")) url else url + "/")	
		}
	}

- def renderMenu(menu: Menu)
	- if (SS.anyGranted(menu.security))
		- menu.menus match
			- case null | Nil =>
				- val url = uri(menu.url)
				%li{:class => {if(checkSelect(requestUri, url)) "active" else null}}
					%a.menu(href="#{url}")
						= S.message(menu.label)
			- case menus =>
				- val selected = menus.exists { m => checkSelect(requestUri, uri(m.url)) }
				%li{:class => {if(selected) "on" else null}}
					%span.menu = S.message(menu.label)
					- renderMenus(menus)
%nav#mainMenu
	%h1 = S.eval[Environment]("@j_env").domainName
	- renderMenus(J.menus)

- J.init
	require(["jeus/menu"]);
