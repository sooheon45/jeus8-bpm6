- import jeus.tool.webadmin.controller.security.SecurityDomain

-@ val __securityDomains: List[SecurityDomain]

- layout("/WEB-INF/scalate/layouts/main.scaml", Map("title" -> "message:security.securitymanager.title", "description" -> "message:security.securitymanager.description", "help" -> "security"))
	- J.base = "domain.security-manager"

	%form(method="post" action="#{requestUri}")

		- J.render("fieldIcons")
		- J.render("buttons", Map("addition" -> List("delete")))

		- J.layout("basic")
			.table
				- J.field(schema = ".default-application-domain")
					- J.select(options = null :: __securityDomains.map(_.name))
				- J.field(schema = ".connect-retries")
					- J.input()
		- J.layout("advanced")
			.table
			- J.group(schema = ".password-validator", noBinding = false, attributes = Map("tail" -> "checkboxForGroup"))
				.table
				- J.group(schema = ".default-password-validator", noBinding = false, attributes = Map("front" -> "choice", "choiceGroup" -> "passwordvalidator"))
					.table
						- J.field(schema = ".minLength")
							- J.input()
						- J.field(schema = ".maxLength")
							- J.input()
						- J.field(schema = ".force-special-character")
							- J.checkbox()
						- J.field(schema = ".force-digit")
							- J.checkbox()
						- J.field(schema = ".force-capital-letter")
							- J.checkbox()
						- J.field(schema = ".force-small-letter")
							- J.checkbox()
						- J.field(schema = ".deny-username")
							- J.checkbox()
				- J.group(schema = ".custom-password-validator", noBinding = false, attributes = Map("front" -> "choice", "choiceGroup" -> "passwordvalidator"))
					.table
						- J.field(schema = ".class-name")
							- J.input()
						
		.lineBar
		- J.render("buttons", Map("addition" -> List("delete")))

	%h2.title
		= J.title("message:security.securitydomains.title", J.base)

	= Table.sortable(null, __securityDomains, sortBy = {r: SecurityDomain => r.name})
		- case 1 =>
			- Item("message:header.name")
				- (index, row) =>
					- val url = J.buildUri("/security/{name}", row.name)
					%a(href="#{url}") = row.name
		- case 2 =>
			- Item("message:header.account.cnt", "30%")
				- (index, row) =>
					= row.getCnt
		- case 3 =>
			- Item("90px", List("center"),
				- Head
					- () =>
						- val url = J.buildUri("/security")
						- J.render("formButton", Map("label" -> "message:common.add.button", "cssClass" -> "button bt_add", "name" -> "create", "disabled" -> !hasLock, "action" -> url))
			- )
				- (index, row) =>
					- val url = J.buildUri("/security/{name}", row.name)
					- J.render("formButton", Map("label" -> "message:common.remove.button", "method" -> "delete", "cssClass" -> "button bt_del", "disabled" -> !hasLock, "action" -> url))
