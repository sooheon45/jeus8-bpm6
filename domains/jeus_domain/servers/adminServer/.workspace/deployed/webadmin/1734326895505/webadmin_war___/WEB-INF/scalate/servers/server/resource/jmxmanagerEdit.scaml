-@ val __listenerRefs: List[String]
-@ val model: JmxManagerType




-@ val isAutoed: Boolean = false

- layout("/WEB-INF/scalate/layouts/main.scaml", Map("title" -> "message:servers.jmx-manager.title"))
	- J.base = "domain.servers.server.jmx-manager"

	- val isReadonly = if(isAutoed) true else false
	- render("/WEB-INF/scalate/menu/server.scaml", Map("first" -> 1, "second" -> 2))

	%form(method="post" action="#{requestUri}")

		- J.render("fieldIcons")
		- var basic = "disabledbasic"
		- if(!isReadonly)
			- J.render("buttons", Map("addition" -> List("delete")))
			- basic = "basic"

		- J.layout(basic)
			.table
				- J.field(schema = ".use-rmi-connector")
					- J.checkbox()
				- J.field(schema = ".use-html-adaptor")
					- J.checkbox()
				- J.field(schema = ".html-adaptor-port")
					- J.input()
				- J.field(schema = ".mlet-url")
					- J.textarea()
			- J.group(schema = ".snmp-adaptor", noBinding = false, attributes = Map("tail" -> "checkboxForGroup"))
				.table
					- J.field(schema = ".snmp-adaptor-port")
						- J.input()
					- J.field(schema = ".snmp-version")
						- J.select(options = List(null, "1", "2", "3"))
					- J.field(schema = ".snmp-max-packet-size")
						- J.input()
					- J.field(schema = ".snmp-security")
						- J.checkbox()
					- J.field(example = "111.111.111.1:8888", schema = ".trap-demon")
						- J.textarea()
				- J.group(schema = ".pooling")
					.table
						- J.field(schema = ".min")
							- J.input()
						- J.field(schema = ".max")
							- J.input()
						- J.field(schema = ".period")
							- J.input()
							%span.unit = S.message("common.ms")


		.lineBar	
		- if(!isReadonly)
			- J.render("buttons", Map("addition" -> List("delete")))
