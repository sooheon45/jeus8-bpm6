- import jeus.tool.webadmin.controller.clusters.ClusterTypeWrapper
- import jeus.tool.webadmin.config.ServerInfo

-@ val serverInfos: List[ServerInfo]

-@ val model: List[ClusterTypeWrapper] = Nil

-@ val isRuntime: Boolean = false

- implicit val dialogOption = DialogOption(alwaysRender = false)

- layout("/WEB-INF/scalate/layouts/main.scaml", Map("title" -> "message:clusters.clusters.title"))
	- J.base = "domain.clusters"
	%h2.title
		= J.title("message:clusters.clusters.title", J.base)
	= Table.sortable(null, model, sortBy = {r: ClusterTypeWrapper => r.name})
		- case 1 =>
			- Item("message:header.name")
				- (index, row) =>
					- val url = J.buildUri("/clusters/{name}", row.name)
					%a(href="#{url}") = row.name
		- case 2 =>
			- Item("message:header.servers", "200px")
				- (index, row) =>
					= row.servers.mkString(",")
		- case 3 =>
			- Item("message:header.running", "100px", "center")
				- (index, row) =>
					= row.running
		- case 4 =>
			- Item("message:header.command", "230px", "center")
				- (index, row) =>
					- val name = row.name
					- val running: Boolean = row.running
					- val uri = J.buildUri("/clusters/{name}", name)
					- J.dialogWithFunction("formButton", Map("label" -> "message:common.start.button", "action" -> uri, "name" -> "start", "cssClass" -> "bt2", "disabled" -> (hasLockAndNoAutoLock || running || isRuntime)))
						- (dialogId: String) =>			
							%article
								%h2.title
									= S.message("common.start.title")
								%form(method="post" action="#{uri}")
									.hidden
									%input(type="hidden" name="start" value="start")
									- J.layout("basic")
										.table
											- J.field(label = "message:common.name.label", description = "message:clusters.startcluster.name.description")
												= name
												%input(type="hidden" name="name" value="#{name}")
											- J.field(label = "message:common.force.label", description = "message:clusters.startcluster.force.description")
												%input(type="checkbox" name="force")
											- J.field(label = "message:clusters.startcluster.standby.label", description = "message:clusters.startcluster.standby.description")
												%input(type="checkbox" name="standby")
											- J.field(label = "message:clusters.startcluster.sequential.label", description = "message:clusters.startcluster.sequential.description")
												%input(type="checkbox" name="seq")
					- J.dialogWithFunction("formButton", Map("label" -> "message:common.stop.button", "action" -> uri, "name" -> "stop", "cssClass" -> "bt2", "disabled" -> (hasLockAndNoAutoLock || !running || isRuntime)))
						- (dialogId: String) =>			
							%article
								%h2.title
									= S.message("common.stop.title")
								%form(method="post" action="#{uri}")
									.hidden
									%input(type="hidden" name="stop" value="stop")
									- J.layout("basic")
										.table
											- J.field(label = "message:common.name.label", description = "message:clusters.stopcluster.name.description")
												= name
												%input(type="hidden" name="name" value="#{name}")
											- val choiceGroup = "stop-optionGroup_" + J.newID
											- J.field(label = "message:common.timeout.label", description = "message:clusters.stopcluster.timeout.description", path = "timeout", noBinding = true, attributes = Map("front" -> "choice", "choiceGroup" -> choiceGroup, "choiceDisabled" -> false, "checked" -> false))
												%input(type="text" name="timeout")
											- J.field(label = "message:common.force.label", description = "message:clusters.stopcluster.force.description", path = "force", noBinding = true, attributes = Map("front" -> "choice", "choiceGroup" -> choiceGroup, "choiceDisabled" -> false, "checked" -> false))
												%input(type="checkbox" name="force" value="true" checked="checked" onclick="return false;")
											- J.field(label = "message:common.graceful.label", description = "message:clusters.stopcluster.graceful.description", path = "graceful", noBinding = true, attributes = Map("front" -> "choice", "choiceGroup" -> choiceGroup, "choiceDisabled" -> false, "checked" -> false))
												%input(type="checkbox" name="graceful" value="true" checked="checked" onclick="return false;")

					- J.render("formButton", Map("cssClass" -> "bt2", "label" -> "message:clusters.clusters.resume.button", "method" -> "post", "disabled" -> (hasLockAndNoAutoLock || !running || isRuntime), "name" -> "resume", "action" -> uri, "confirm" -> true))
					- J.render("formButton", Map("cssClass" -> "bt2", "method" -> "post", "label" -> "message:clusters.clusters.suspend.button", "disabled" -> (hasLockAndNoAutoLock || !running || isRuntime), "name" -> "suspend", "action" -> uri, "confirm" -> true))
		- case 5 =>
			- Item("90px", List("center"),
				- Head
					- () =>
						- val url = J.buildUri("/clusters")
						- J.render("formButton", Map("label" -> "message:common.add.button", "cssClass" -> "button bt_add", "name" -> "create", "disabled" -> !hasLock, "action" -> url))
			- )
				- (index, row) =>
					- val url = J.buildUri("/clusters/{name}", row.name)
					- J.render("formButton", Map("label" -> "message:common.remove.button", "method" -> "delete", "cssClass" -> "button bt_del", "disabled" -> !hasLock, "action" -> url))
