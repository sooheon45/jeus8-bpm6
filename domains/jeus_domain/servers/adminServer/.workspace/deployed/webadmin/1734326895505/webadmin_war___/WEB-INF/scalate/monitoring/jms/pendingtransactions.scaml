-@ val serverName: String = null
-@ val model: List[TabularData] = null

- layout("/scalate/layouts/main.scaml", Map("description" -> "message:monitoring.jms.pendingtransactions.description", "title" -> "message:monitoring.jms.pendingtransactions"))
	- J.base = "monitoring.jms.pendingtransactions"
	- render("/scalate/menu/monitoring/jms.scaml", Map("first" -> 3))

	- J.layout("accordian", Map("selected" -> serverName, "baseUri" -> "/monitoring/jms/pendingtransactions"), true)
		- if (model != null)
			- model.foreach
				- data =>
					- val header = (header: String)	=>
						%h3.title = header
						- val tid = 
							- (header.split(":", 2).toList: @unchecked) match 
								- case _ :: tid :: Nil => tid
						- val url = J.buildUri("/monitoring/jms/pendingtransactions/{serverName}/{tid}", serverName, tid)
						- J.render("formButton", Map("method" -> "post", "label" -> "message:monitoring.jms.clients.commit.button", "cssClass" -> "button bt2", "action" -> url))
					= Tabular.render(null, data, customHeader = header)()
