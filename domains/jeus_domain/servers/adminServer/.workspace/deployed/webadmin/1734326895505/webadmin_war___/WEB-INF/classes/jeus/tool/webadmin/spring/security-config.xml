<?xml version="1.0" encoding="UTF-8"?>

<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:security="http://www.springframework.org/schema/security"
	xmlns:util="http://www.springframework.org/schema/util"
	xsi:schemaLocation="http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security-4.2.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.2.xsd
		http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-4.2.xsd">

	<security:global-method-security pre-post-annotations="enabled" secured-annotations="enabled" jsr250-annotations="enabled" access-decision-manager-ref="accessDecisionManager">
	</security:global-method-security>

  	<security:http pattern="/resources/**" security="none"/>
  	<security:http pattern="/online_help/**" security="none"/>
  	<security:http pattern="/login**" security="none"/>
  	
	<security:http auto-config="false" use-expressions="false" disable-url-rewriting="true" access-decision-manager-ref="accessDecisionManager">
		<security:headers >
			<security:frame-options policy="SAMEORIGIN"/>
		</security:headers>
		<security:csrf disabled="true"/>
		<security:intercept-url pattern="/runtime/**" access="ROLE_CONFIG,ROLE_SECURITY"/>
		<security:intercept-url pattern="/lockAndEdit/**" access="ROLE_CONFIG,ROLE_SECURITY"/>

		<security:intercept-url pattern="/nodes/**" method="GET" access="ROLE_CONFIG_READONLY"/>
		<security:intercept-url pattern="/domain/**" method="GET" access="ROLE_CONFIG_READONLY"/>
		<security:intercept-url pattern="/session/specificscopecluster/**" method="GET" access="ROLE_CONFIG_READONLY_DEFAULT_LICENSE"/> <!-- cloud-->
		<security:intercept-url pattern="/clusters/**" method="GET" access="ROLE_CONFIG_READONLY_DEFAULT_LICENSE"/><!-- cloud-->
		<security:intercept-url pattern="/servers/**" method="GET" access="ROLE_CONFIG_READONLY"/>
		<security:intercept-url pattern="/servertemplate/**" method="GET" access="ROLE_CONFIG_READONLY_DEFAULT_LICENSE"/> <!-- cloud-->
		<security:intercept-url pattern="/resource/**" method="GET" access="ROLE_CONFIG_READONLY"/>
		<!-- cloud /session/clusterconfig -->
		<security:intercept-url pattern="/security/**" method="GET" access="ROLE_SECURITY_READONLY"/>		
		<security:intercept-url pattern="/applications/**" method="GET" access="ROLE_DEPLOY_READONLY"/>
		<security:intercept-url pattern="/monitoring/**" method="GET" access="ROLE_MONITORING_READONLY"/>
		
		<security:intercept-url pattern="/nodes/**" access="ROLE_CONFIG"/>
		<security:intercept-url pattern="/domain/**" access="ROLE_CONFIG"/>
		<security:intercept-url pattern="/session/specificscopecluster/**" access="ROLE_CONFIG_DEFAULT_LICENSE"/> <!-- cloud-->
		<security:intercept-url pattern="/clusters/**" access="ROLE_CONFIG_DEFAULT_LICENSE"/><!-- cloud-->
		<security:intercept-url pattern="/servers/**" access="ROLE_CONFIG"/>
		<security:intercept-url pattern="/servertemplate/**" access="ROLE_CONFIG_DEFAULT_LICENSE"/><!-- cloud-->
		<security:intercept-url pattern="/resource/**" access="ROLE_CONFIG"/>
		
		<security:intercept-url pattern="/security/**" access="ROLE_SECURITY"/>		
		<security:intercept-url pattern="/applications/**" access="ROLE_DEPLOY"/>
		<security:intercept-url pattern="/monitoring/**" access="ROLE_MONITORING"/>

		<security:intercept-url pattern="/console/**" access="ROLE_CONSOLE"/>
		<security:intercept-url pattern="/backup/**" access="ROLE_ADMIN"/>
		<security:intercept-url pattern="/xml/**" access="ROLE_ADMIN"/>
		
		
		<security:intercept-url pattern="/**" access="IS_AUTHENTICATED_ANONYMOUSLY"/>
		<security:form-login 
			login-page="/login"
			authentication-failure-url="/login?login_error=1"
			login-processing-url="/j_security_check"
			username-parameter="username"
			password-parameter="password"
			/>
		<security:logout 
			logout-url="/logout" 
			logout-success-url="/login" />		
		<security:custom-filter ref="jeusAuthenticationFilter" after="LAST"/>
		<!--<security:session-management>
			<security:concurrency-control max-sessions="100" error-if-maximum-exceeded="true"/>
		</security:session-management>--> 
		<security:anonymous enabled="false"/>
	</security:http>	

	<bean id="httpFirewall" class="org.springframework.security.web.firewall.StrictHttpFirewall">
		<!--property name="allowBackSlash" value="false" />
		<property name="allowSemicolon" value="false" / -->
		<property name="allowUrlEncodedPercent" value="true" />
		<property name="allowUrlEncodedPeriod" value="true" />
		<property name="allowUrlEncodedSlash" value="true" />
	</bean>
		
	<security:http-firewall ref="httpFirewall"/>

	<bean id="jeusAuthenticationFilter" class="jeus.tool.webadmin.security.JeusAuthenticationFilter">
	</bean>
	
	<bean id="userDetailsService" class="jeus.tool.webadmin.security.JeusUserDetailsService">
	   <property name="roleMapping">
	       <util:map>
                <entry key="AdministratorsRole" value="ROLE_ADMIN"/>
                <entry key="ConfigurationRole" value="ROLE_CONFIG"/>
                <entry key="DeployRole" value="ROLE_DEPLOY"/>
                <entry key="MonitoringRole" value="ROLE_MONITORING"/>
                <entry key="ConsoleRole" value="ROLE_CONSOLE"/>
                <entry key="SecurityRole" value="ROLE_SECURITY"/>
                <entry key="ConfigurationReadOnlyRole" value="ROLE_CONFIG_READONLY"/>
                <entry key="SecurityReadOnlyRole" value="ROLE_SECURITY_READONLY"/>
                <entry key="DeployReadOnlyRole" value="ROLE_DEPLOY_READONLY"/>
                <entry key="MonitoringReadOnlyRole" value="ROLE_MONITORING_READONLY"/>
                <entry key="ReadOnlyRole" value="ROLE_READONLY"/>
	       </util:map> 
	   </property>
	</bean>
	
  	<security:authentication-manager>
  		<security:authentication-provider ref="jeusAuthenticationProvider">
  		</security:authentication-provider>
	</security:authentication-manager>
	 
	<bean id="jeusAuthenticationProvider" class="jeus.tool.webadmin.security.JeusAuthenticationProvider">
		<property name="userDetailsService" ref="userDetailsService" />
	</bean>

	<bean id="authenticatedVoter" class="org.springframework.security.access.vote.AuthenticatedVoter" />

	<bean id="roleVoter" class="org.springframework.security.access.vote.RoleHierarchyVoter">
		<constructor-arg ref="roleHierarchy" />
	</bean>

	<bean id="roleHierarchy" class="org.springframework.security.access.hierarchicalroles.RoleHierarchyImpl">
		<property name="hierarchy">
			<value>
				ROLE_ADMIN > ROLE_CONFIG
				ROLE_ADMIN > ROLE_SECURITY
				ROLE_ADMIN > ROLE_DEPLOY
				ROLE_ADMIN > ROLE_MONITORING
				ROLE_ADMIN > ROLE_CONSOLE

				ROLE_CONFIG > ROLE_CONFIG_READONLY
				ROLE_SECURITY > ROLE_SECURITY_READONLY
				ROLE_DEPLOY > ROLE_DEPLOY_READONLY
				ROLE_MONITORING > ROLE_MONITORING_READONLY
				
				ROLE_READONLY > ROLE_CONFIG_READONLY
				ROLE_READONLY > ROLE_SECURITY_READONLY
				ROLE_READONLY > ROLE_DEPLOY_READONLY
				ROLE_READONLY > ROLE_MONITORING_READONLY
				
				ROLE_ADMIN_DEFAULT_LICENSE > ROLE_ADMIN
				ROLE_ADMIN_DEFAULT_LICENSE > ROLE_CONFIG_DEFAULT_LICENSE
				ROLE_CONFIG_DEFAULT_LICENSE > ROLE_CONFIG
				ROLE_CONFIG_DEFAULT_LICENSE > ROLE_CONFIG_READONLY_DEFAULT_LICENSE
				ROLE_READONLY_DEFAULT_LICENSE > ROLE_READONLY
				ROLE_READONLY_DEFAULT_LICENSE > ROLE_CONFIG_READONLY_DEFAULT_LICENSE
				ROLE_CONFIG_READONLY_DEFAULT_LICENSE > ROLE_CONFIG_READONLY
			</value>
		</property>
	</bean>	
	
	<bean id="accessDecisionManager" class="org.springframework.security.access.vote.AffirmativeBased">
		<constructor-arg>
			<util:list>
		      	<ref bean="roleVoter" />
		      	<ref bean="authenticatedVoter" />
		    </util:list>
		</constructor-arg>		
	</bean>	
</beans>
