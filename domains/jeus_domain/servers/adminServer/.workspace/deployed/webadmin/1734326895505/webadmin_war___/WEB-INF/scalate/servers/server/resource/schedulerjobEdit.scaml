-@ val createMode: Boolean = false
-@ val model: JobType


-@ val isAutoed: Boolean = false

- layout("/WEB-INF/scalate/layouts/main.scaml", Map("title" -> "message:servers.job.title"))
	- J.base = "domain.servers.server.scheduler.job-list.job"
	- val isReadonly = if(!createMode && isAutoed) true else false
	- render("/WEB-INF/scalate/menu/server.scaml", Map("first" -> 1, "second" -> 3))

	%form(method="post" action="#{requestUri}")
		- J.render("createMode")

		- J.render("fieldIcons")
		- var basic = "disabledbasic"
		- if(!isReadonly)
			- J.render("buttons")
			- basic = "basic"
			
		- J.layout(basic)
			.table
				- J.field(schema = ".name")
					- if (createMode)
						- J.input()
					- else
						= model.getName()
				- J.field(schema = ".class-name")
					- J.input()
				- J.field(schema = ".description")
					- J.input()
				- J.field(schema = ".count")
					- J.input()
				- J.field(example = "2012-03-13T16:53:42.333", schema = ".begin-time")
					- J.input()
				- J.field(example = "2012-03-13T16:53:42.333", schema = ".end-time")
					- J.input()
			- J.group(schema = ".interval")
				.table
					- J.field(schema = ".millisecond", required = false, attributes = Map("front" -> "choice", "choiceGroup" -> "intervalGroup"))
						- J.input()
						%span.unit = S.message("common.ms")
					- J.field(schema = ".minutely", required = false, attributes = Map("front" -> "choice", "choiceGroup" -> "intervalGroup"))
						- J.input()
						%span.unit = S.message("common.m")
					- J.field(schema = ".hourly", required = false, attributes = Map("front" -> "choice", "choiceGroup" -> "intervalGroup"))
						- J.input()
						%span.unit = S.message("common.h")
					- J.field(schema = ".daily", required = false, attributes = Map("front" -> "choice", "choiceGroup" -> "intervalGroup"))
						- J.input()
						%span.unit = S.message("common.d")

		.lineBar
		- if(!isReadonly)	
			- J.render("buttons")
