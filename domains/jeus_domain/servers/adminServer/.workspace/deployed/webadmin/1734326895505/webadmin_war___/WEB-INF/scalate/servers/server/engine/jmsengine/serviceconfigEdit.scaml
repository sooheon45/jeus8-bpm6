-@ val createMode: Boolean = false
-@ val model: JmsServiceConfigType
-@ val __listenerNames: List[String] = Nil



-@ val isAutoed: Boolean = false

- layout("/WEB-INF/scalate/layouts/main.scaml", Map("title" -> "message:servers.service-config.title"))
	- J.base = "domain.servers.server.jms-engine.service-config"
	- val isReadonly = if(!createMode && isAutoed) true else false
	- render("/WEB-INF/scalate/menu/server.scaml", Map("first" -> 2, "second" -> 1, "third" -> 1))

	%form(method="post" action="#{requestUri}")
		- J.render("createMode")

		- J.render("fieldIcons")
		- var basic = "disabledbasic"
		- if(!isReadonly)
			- J.render("buttons")
			- basic = "basic"

		- J.layout(basic)
			.table
				- J.field(schema = ".name")
					- if (createMode)
						- J.input()
					- else
						= model.getName()
				- J.field(schema = ".client-limit")
					- J.input()
				- J.field(schema = ".client-keepalive-timeout")
					- J.input()
					%span.unit s
				- J.field(schema = ".listener-name", noBinding = false, attributes = Map("front" -> "choice", "choiceGroup" -> "listenerGroup"))
					- J.select(options = null :: __listenerNames)
			- J.group(schema = ".virtual-listener", noBinding = false, attributes = Map("front" -> "choice", "choiceGroup" -> "listenerGroup"))
				.table
					- J.field(schema = ".server-address")
						- J.input()
					- J.field(schema = ".port")
						- J.input()

		.lineBar
		- if(!isReadonly)
			- J.render("buttons")
