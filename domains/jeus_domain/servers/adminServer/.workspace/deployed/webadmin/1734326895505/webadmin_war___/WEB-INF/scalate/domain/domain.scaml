-@ var model: DomainType
-@ val __nodeNames: List[String] = Nil

- layout("/WEB-INF/scalate/layouts/main.scaml", Map("title" -> "message:domain.title"))
	- J.base = "domain"
	
	- render("/WEB-INF/scalate/menu/domain.scaml", Map("selected" -> 0))

	%form(method="post" action="#{requestUri}")

		- J.render("fieldIcons")
		- J.render("buttons")

		- J.layout("basic")
			.table
				- J.field(schema = ".admin-server-name", noBinding = true)
					= model.getAdminServerName()
				- J.field(schema = ".id", noBinding = true)
					= model.getId()
				- J.field(schema = ".domain-log-home")
					- J.input()
		- J.layout("advanced")
			.table
				- J.field(schema = ".production-mode")
					- J.checkbox(attributes = Map("disabled" -> "true"))
					- J.hidden()
				- J.field(schema = ".enable-webadmin")
					- J.checkbox()
				- J.field(schema = ".enable-json-command")
					- J.checkbox()
				- J.field(schema = ".enable-to-resynchronize-applications")
					- J.checkbox()
				- J.field(schema = ".application-repositories", path = "applicationRepositories.applicationRepository")
					- val repositoriesID = "repositories_" + J.currentID
					- J.textarea(attributes = Map("id" -> repositoriesID))
					- J.dialog("button", Map("label" -> "message:common.input.button", "cssClass" -> "btn_type03", "btype" -> "button", "disabled" -> !hasLock))
						- J.render("navigationDialog", Map("directoryOnly" -> true, "targetId" -> repositoriesID))
			- J.group(schema = ".system-clustering-framework")
				.table
					- J.field(schema = ".heartbeat-address")
						- J.input()
					- J.field(schema = ".heartbeat-port")
						- J.input()
					- J.field(schema = ".use-virtual-multicast")
						- J.checkbox()
					- J.field(schema = ".leader-discovery-timeout")
						- J.input()
						%span.unit = S.message("common.ms")
					- J.field(schema = ".failure-detection-timeout")
						- J.input()
						%span.unit = S.message("common.ms")
					- J.field(schema = ".failure-verification-timeout")
						- J.input()
						%span.unit = S.message("common.ms")
					- J.field(schema = ".max-thread-pool-size")
						- J.input()
					- J.field(schema = ".min-thread-pool-size")
						- J.input()
			- J.group(schema = ".domain-backup")
				.table
					- J.field(schema = ".backup-on-boot")
						- J.checkbox()
					- J.field(schema = ".backup-dir")
						- val backupDirID = "backupDir_" + J.currentID
						- J.input(attributes = Map("id" -> backupDirID))
						- J.dialog("button", Map("label" -> "message:common.input.button", "cssClass" -> "btn_type03", "btype" -> "button", "disabled" -> !hasLock))
							- J.render("navigationDialog", Map("directoryOnly" -> true, "targetId" -> backupDirID, "append" -> false))
					- J.field(schema = ".node-name")
						- J.select(options = null :: __nodeNames)
					- J.field(label = "message:domain.backup.back.title", description = "message:domain.backup.back.description")
						%a.button.btn_type03(href="#{contextPath}/domain/packDomain")
							%span.button-text = S.message("domain.backup.back.button")
		.lineBar
		- J.render("buttons")