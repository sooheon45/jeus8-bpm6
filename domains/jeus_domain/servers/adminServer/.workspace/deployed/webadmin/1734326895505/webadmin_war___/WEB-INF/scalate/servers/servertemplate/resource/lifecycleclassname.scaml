-@ val createMode: Boolean = false
-@ val model: LifecycleInvocationType
-@ val serverTemplateName: String

- layout("/WEB-INF/scalate/layouts/main.scaml", Map("title" -> "message:server.lifecycle-invocation.title"))
	- J.base = "domain.server-templates.server-template.lifecycle-invocation"
	- render("/WEB-INF/scalate/menu/server-template.scaml", Map("first" -> 1, "second" -> 3))

	%form(method="post" action="#{requestUri}")
		- J.render("createMode")

		- J.render("fieldIcons")

		- J.layout("basic")
			.table
				- J.field(schema = ".class-name")
					- if (createMode)
						- J.input()
					- else
						= model.getClassName()

		.lineBar

	- if (!createMode && hasText(model.getClassName()))
		%h2.title
			= S.message("servers.library-ref.title")
		= Table.render(null, model.getLibraryRef.asScala.toList)
			- case 1 =>
				- Item("message:header.library-name")
					- (index, row) =>
						- val url = J.buildUri("/servertemplate/{servertemplate}/resource/lifecycle/{className}/libraryref/{libraryName}", serverTemplateName, model.getClassName(), row.getLibraryName())
						%a(href="#{url}") = row.getLibraryName()
			- case 2 =>
				- Item("90px", List("center"),
					- Head
						- () =>
							- val url = J.buildUri("/servertemplate/{servertemplate}/resource/lifecycle/{className}/libraryref", serverTemplateName, model.getClassName())
							- J.render("formButton", Map("label" -> "message:common.add.button", "action" -> url, "name" -> "create", "cssClass" -> "bt_add", "disabled" -> !hasLock))
				- )
					- (index, row) =>
						- val url = J.buildUri("/servertemplate/{servertemplate}/resource/lifecycle/{className}/libraryref/{libraryName}", serverTemplateName, model.getClassName(), row.getLibraryName())
						- J.render("formButton", Map("label" -> "message:common.remove.button", "action" -> url, "method" -> "delete", "cssClass" -> "bt_del", "disabled" -> !hasLock))

		%h2.title
			= S.message("servers.invocation.title")
		= Table.render(null, model.getInvocation.asScala.toList)
			- case 1 =>
				- Item("message:header.method-name")
					- (index, row) =>
						- val url = J.buildUri("/servertemplate/{servertemplate}/resource/lifecycle/{className}/invocation/{id}", serverTemplateName, model.getClassName(), row.getId())
						%a(href="#{url}") = row.getInvocationMethod().getMethodName()
			- case 2 =>
				- Item("90px", List("center"),
					- Head
						- () =>
							- val url = J.buildUri("/servertemplate/{servertemplate}/resource/lifecycle/{className}/invocation", serverTemplateName, model.getClassName())
							- J.render("formButton", Map("label" -> "message:common.add.button", "action" -> url, "name" -> "create", "cssClass" -> "bt_add", "disabled" -> !hasLock))
				- )
					- (index, row) =>					
						- val url = J.buildUri("/servertemplate/{servertemplate}/resource/lifecycle/{className}/invocation/{id}/{methodName}", serverTemplateName, model.getClassName(), row.getId(), row.getInvocationMethod().getMethodName())
						- J.render("formButton", Map("label" -> "message:common.remove.button", "action" -> url, "method" -> "delete", "cssClass" -> "bt_del", "disabled" -> {!hasLock || model.getInvocation.size() <= 1}))					
