-@ val createMode: Boolean = false
-@ val model: ConnectionFactoryType
-@ val __serviceConfigs: List[String] = Nil



-@ val isAutoed: Boolean = false

- layout("/WEB-INF/scalate/layouts/main.scaml", Map("title" -> "message:servers.connection-factory.title"))
	- J.base = "domain.servers.server.jms-engine.connection-factory"
	- val isReadonly = if(!createMode && isAutoed) true else false
	- render("/WEB-INF/scalate/menu/server.scaml", Map("first" -> 2, "second" -> 1, "third" -> 2))

	%form(method="post" action="#{requestUri}")
		- J.render("createMode")

		- J.render("fieldIcons")
		- var basic = "disabledbasic"
		- if(!isReadonly)
			- J.render("buttons")
			- basic = "basic"

		- J.layout(basic)
			.table
				- J.field(schema = ".name")
					- if (createMode)
						- J.input()
					- else
						= model.getName
				- J.field(schema = ".type")
					- J.select()
				- J.field(schema = ".service")
					- J.select(options = null :: __serviceConfigs)
				- J.field(schema = ".export-name")
					- J.input()
				- J.field(schema = ".client-id")
					- J.input()
				- J.field(schema = ".server-selection-policy")
					- J.select()
				- J.field(schema = ".request-blocking-time")
					- J.input()
					%span.unit = S.message("common.s")
				- J.field(schema = ".reconnect-enabled")
					- J.checkbox()
				- J.field(schema = ".reconnect-period")
					- J.input()
					%span.unit = S.message("common.ms")
				- J.field(schema = ".reconnect-interval")
					- J.input()
					%span.unit = S.message("common.s")


		.lineBar
		- if(!isReadonly)
			- J.render("buttons")
