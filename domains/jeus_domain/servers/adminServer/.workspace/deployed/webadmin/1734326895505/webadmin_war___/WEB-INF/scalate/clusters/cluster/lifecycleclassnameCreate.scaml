- import jeus.tool.webadmin.controller.CreateLifecycleInvocationType

-@ val createMode: Boolean = false
-@ val model: CreateLifecycleInvocationType

- layout("/WEB-INF/scalate/layouts/main.scaml", Map("title" -> "message:clusters.lifecycle-invocation.title"))
	- J.base = "domain.clusters.cluster.lifecycle-invocation"
	- render("/WEB-INF/scalate/menu/cluster.scaml", Map("selected" -> 4))

	%form(method="post" action="#{requestUri}")
		- J.render("createMode")

		- J.render("fieldIcons")
		- J.render("buttons")

		- J.layout("basic")
			.table
				- J.field(schema = ".class-name", path = "lifecycleInvocation.className")
					- if (createMode)
						- J.input()
					- else
						= model.lifecycleInvocation.getClassName()
			- J.group(schema = ".invocation")
				.table
					- J.field(schema = ".invocation-type")
						- J.select()
					- J.field(schema = ".invocation-argument")
						- J.textarea()
				- J.group(schema = ".invocation-method")
					.table
						- J.field(schema = ".method-name")
							- if (createMode)
								- J.input()
							- else
								= model.invocation.getInvocationMethod.getMethodName
								- J.hidden()
						- J.field(schema = ".method-params.method-param")
							- J.textarea()


		.lineBar
		- J.render("buttons")

