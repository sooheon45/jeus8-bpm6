-@ val databases: List[DatabaseType]
-@ val clusterdss: List[ClusterDsType]

- import jeus.tool.webadmin.Settings

- val confirmDelete: Boolean = S.eval[Settings]("@settings").referenceDelete

- layout("/WEB-INF/scalate/layouts/main.scaml", Map("title" -> "message:resources.datasource.title"))
	- J.base = "domain.resources.data-source"
	%h2.title
		= J.title("message:resources.database.title", J.base)

	= Table.sortable(null, databases, sortBy = {r: DatabaseType => r.getDataSourceId})
		- case 1 =>
			- Item("message:header.data-source-id", "150px")
				- (index, row) =>
					- val url = J.buildUri("/resource/datasource/database/{dataSourceId}", row.getDataSourceId)
					%a(href="#{url}") = row.getDataSourceId
		- case 2 =>
			- Item("message:header.data-source-class-name")
				- (index, row) =>
					= row.getDataSourceClassName
		- case 3 =>
			- Item("message:header.data-source-type", "150px")
				- (index, row) =>
					= row.getDataSourceType
		- case 4 =>
			- Item("message:header.command", "15%", "center")
				- (index, row) =>
					- val url = J.buildUri("/resource/datasource/database/{dataSourceId}", row.getDataSourceId)
					- J.render("formButton", Map("cssClass" -> "bt2", "name" -> "test", "label" -> "message:domain.resources.data-source.test.label", "method" -> "post", "disabled" -> hasLockAndNoAutoLock, "action" -> url))
		- case 5 =>
			- Item("130px", List("center"),
				- Head
					- () =>
						- val url = J.buildUri("/resource/datasource/database")
						- J.render("formButton", Map("label" -> "message:common.add.button", "disabled" -> !hasLock, "cssClass" -> "bt_add", "action" -> url))
			- )
				- (index, row) =>
					- val datasourceId = row.getDataSourceId
					- val url = J.buildUri("/resource/datasource/database/{dataSourceId}", row.getDataSourceId)
					- J.render("formButton", Map("label" -> "message:common.remove.button", "action" -> url, "cssClass" -> "bt_del", "method" -> "delete", "disabled" -> !hasLock, "confirm" -> confirmDelete, "message" -> "message:common.confirm.reference.delete.message"))
					- J.render("formButton", Map("label" -> "message:common.duplicate.button", "btype" -> "submit", "action" -> url, "cssClass" -> "bt_add", "method" -> "put", "disabled" -> !hasLock, "dialogTemplateUri" -> "resource/datasource/dupdatabase", "dialogParams" -> Map("datasourceId" -> datasourceId, "action" -> url)))
					
	%h2.title
		= J.title("message:resources.clusterds.title", J.base)

	= Table.sortable(null, clusterdss, sortBy = {r: ClusterDsType => r.getDataSourceId})
		- case 1 =>
			- Item("message:header.data-source-id", "250px")
				- (index, row) =>
					- val url = J.buildUri("/resource/datasource/clusterds/{dataSourceId}", row.getDataSourceId)
					%a(href="#{url}") = row.getDataSourceId
		- case 2 =>
			- Item("message:header.export-name")
				- (index, row) =>
					= row.getExportName
		- case 3 =>
			- Item("80px",
				- Head
					- () =>
						- val url = J.buildUri("/resource/datasource/clusterds")
						- J.render("formButton", Map("label" -> "message:common.add.button", "disabled" -> !hasLock, "cssClass" -> "bt_add", "action" -> url))
			- )
				- (index, row) =>
					- val url = J.buildUri("/resource/datasource/clusterds/{dataSourceId}", row.getDataSourceId)
					- J.render("formButton", Map("label" -> "message:common.remove.button", "cssClass" -> "bt_del", "method" -> "delete", "disabled" -> !hasLock, "action" -> url, "confirm" -> confirmDelete, "message" -> "message:common.confirm.reference.delete.message"))
