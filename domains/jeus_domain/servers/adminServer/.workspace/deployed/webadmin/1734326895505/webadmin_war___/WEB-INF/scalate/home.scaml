- import jeus.tool.webadmin.config.ServerInfo
- import jeus.tool.webadmin.controller.Datasource
- import jeus.tool.webadmin.Environment

-@ val serverInfos: List[ServerInfo]
-@ val datasources: List[Datasource]
-@ val applications: Either[String, TabularData]
-@ val clusters: List[ClusterType]
-@ val securityDomains: List[SecurityDomainType]
- val jEnv = S.eval[Environment]("@j_env")

- J.header
	%link(rel="text/css" rel="stylesheet" href="#{contextPath}/resources/less/home.css")

%section.hidden
	%a(href="#{contextPath}/sitemap") sitemap

%section#homeStatistics
	%h1
		= S.message("main.statistics")
	%section
		%header
			%h2.server
				= S.message("main.servers")
			- val status: Map[String, Int] = J.serverStatus
			%ul
				%li
					= S.message("main.servers.info.failed")
					%em = status.getOrElse(S.message("level.FAILED"), 0)
				%li
					= S.message("main.servers.info.standby")
					%em = status.getOrElse(S.message("level.STANDBY"), 0)
				%li
					= S.message("main.servers.info.running")
					%em = status.getOrElse(S.message("level.RUNNING"), 0)
				%li
					= S.message("main.servers.info.shutdown")
					%em = status.getOrElse(S.message("level.SHUTDOWN"), 0)
				%li
					= S.message("main.servers.info.suspended")
					%em = status.getOrElse(S.message("level.SUSPENDED"), 0)
				%li.last-child
					= S.message("main.servers.info.other")
					%em = status.getOrElse(S.message("level.OTHER"), 0)

		%div
			- if (SS.anyGranted(List("ROLE_CONFIG_READONLY")))
				= Table.render(null, serverInfos)
					- case 1 =>
						- Item("message:header.server")
							- (index, row) =>
								- val uri = J.buildUri("/servers/{server}", row.name)
								%a(href="#{uri}")
									= row.name + {if (row.adminServer) "(*)" else ""}
					- case 2 =>
						- Item("message:header.status", "35%")
							- (index, row) =>
								= row.status
					- case 3 =>
						- Item("message:header.engine", "20%", "center")
							- (index, row) =>
								- val uri = J.buildUri("/servers/{server}", row.name)
								%a(href="#{uri}/engine/webengine")
									%img(src="#{contextPath}/resources/image/common/web_engine.gif" title='#{S.message("common.engine.web.title")}' alt='#{S.message("common.engine.web.title")}')
								%a(href="#{uri}/engine/jmsengine")
									%img(src="#{contextPath}/resources/image/common/jms_engine.gif" title='#{S.message("common.engine.jms.title")}' alt='#{S.message("common.engine.jms.title")}')
								%a(href="#{uri}/engine/ejbengine")
									%img(src="#{contextPath}/resources/image/common/ejb_engine.gif" title='#{S.message("common.engine.ejb.title")}' alt='#{S.message("common.engine.ejb.title")}')
			- else
				= Table.render(null, serverInfos)
					- case 1 =>
						- Item("message:header.server")
							- (index, row) =>
								- val uri = J.buildUri("/servers/{server}", row.name)
								= row.name + {if (row.adminServer) "(*)" else ""}
					- case 2 =>
						- Item("message:header.status", "35%")
							- (index, row) =>
								= row.status
								
	%section
		%header
			%h2.datasource
				= S.message("main.datasource")
			- 
				val (cntDatabase, cntClusterDs) = 
					datasources.foldLeft((0,0)) { case (result, item) =>
						if (item.dataSourceType == "database") {
							(result._1 + 1, result._2)
						} else {
							(result._1, result._2 + 1)
						}
					}

			%ul
				%li
					= S.message("main.datasource.database")
					%em = cntDatabase
				%li.last-child
					= S.message("main.datasource.cluster-ds")
					%em = cntClusterDs
		%div
			= Table.render(null, datasources)
				- case 1 =>
					- Item("message:header.data-source-id")
						- (index, row) =>
							- val dsType = if (row.dataSourceType == "database") "database" else "clusterds"
							- if (SS.anyGranted(List("ROLE_CONFIG_READONLY")))
								- val uri = J.buildUri("/resource/datasource/"+dsType+"/{id}", row.dataSourceId)
								%a(href="#{uri}")
									= row.dataSourceId
							- else
								= row.dataSourceId
				- case 2 =>
					- Item("message:header.type", "40%")
						- (index, row) =>
							= row.dataSourceType
	%section
		%header
			%h2.application = S.message("main.applications")
			%ul
				%li.last-child
					= S.message("main.applications.application")
					%em
						- applications match
							- case Right(app) =>
								= app.getRows.size()
							- case _ =>

		%div
			- import jeus.tool.console.model.TabularData
			- applications match
				- case Left(message) =>
					= message
				- case Right(data) =>
					- val displayNames = data.getDisplayNames.asScala
					= Table.render(null, data.getRows.asScala.toList)
						- case 1 =>
							- Item(displayNames(0))
								- (index, row) =>
									- val INSTALLED: String = S.message("level.INSTALLED")
									- row.get(2) match
										- case INSTALLED =>
											= row.get(0)
										- case _ =>
											- if (SS.anyGranted(List("ROLE_DEPLOY_READONLY")))
												- val url = J.buildUri("/applications/applications/{applicationID}", row.get(0))
												%a(href="#{url}") = row.get(0)
											- else
												= row.get(0)
						- case 2 =>
							- Item(displayNames(1), null, "center")
								- (index, row) =>
									= row.get(1)
						- case 3 =>
							- Item(displayNames(2), null, "center")
								- (index, row) =>
									= row.get(2)
	- if(!jEnv.isCloud)
		%section
			%header
				%h2.cluster
					= S.message("main.clusters")
				%ul
					%li.last-child
						= S.message("main.clusters.clusters")
						%em
							= clusters.size
			%div
				= Table.render(null, clusters)
					- case 1 =>
						- Item("message:header.name")
							- (index, row) =>
								- if (SS.anyGranted(List("ROLE_CONFIG_READONLY")))
									- val uri = J.buildUri("/clusters/{name}", row.getName)
									%a(href="#{uri}") = row.getName
								- else
									= row.getName
					- case 2 =>
						- Item("message:header.servers")
							- (index, row) =>
								= row.getServers.getServerName.asScala.mkString(",")

%section#homeInfo
	%h1
		= S.message("main.info")
	%section.domain
		%h2
			= S.message("main.domain.info")
		%dl
			%dt
				- if (SS.anyGranted(List("ROLE_CONFIG_READONLY")))
					%a(href="#{contextPath}/domain") = S.eval[Environment]("@j_env").domainName
				- else
					%a() = S.eval[Environment]("@j_env").domainName
			- if (SS.anyGranted(List("ROLE_SECURITY_READONLY")))
				%dd
					= S.message("main.security")
					%a.button.config(href="#{contextPath}/security")
						%span.button-text = S.message("common.setting")
				%dd
					= S.message("main.security.group.and.user")
					%a.button.config01(href="#{contextPath}/security/SYSTEM_DOMAIN/subjectgroup")
						%span.button-text = S.message("common.management")
			%dd.last-child
				= S.message("main.settings")
				%a.button.config(href="#{contextPath}/settings")
					%span.button-text = S.message("common.setting")
	%section.manual
		%header
			%h2
				%a#popupHelp(href="#{contextPath}/help")
					= S.message("main.online.help")
			%a(href='#{S.message("help.main.manual.download.url")}' target="_blank" rel="noopener noreferrer")
				%img(src="#{contextPath}/resources/image/common/pdf_download.png" alt='#{S.message("main.manual.download")}' title='#{S.message("main.manual.download")}')
		%p
			= S.message("main.online.help.description")
	- if (SS.anyGranted(List("ROLE_CONSOLE")))
		%section.console
			%h2
				%a(href="#{contextPath}/console")
					= S.message("main.console")
	- if (SS.anyGranted(List("ROLE_CONFIG_READONLY")))
		%section.node
			%h2
				%a(href="#{contextPath}/nodes")
					= S.message("main.nodes")

.homeSecondRow
	- if (SS.anyGranted(List("ROLE_CONFIG_READONLY")))
		%section#homeResource
			%h1
				= S.message("main.resourcemanager")
			%dl
				%dt
					%a(href="#{contextPath}/resource/messagebridge")
						= S.message("menu.resource.messagebridge")
				%dd
					= S.message("main.resource.messageBridge")
			%dl
				%dt
					%a(href="#{contextPath}/resource/mailsource")
						= S.message("menu.resource.mailsource")
				%dd
					= S.message("main.resource.mailSource")
			%dl
				%dt
					%a(href="#{contextPath}/resource/externalsource")
						= S.message("menu.resource.externalsource")
				%dd
					= S.message("main.resource.externalSource")
			%dl
				%dt
					%a(href="#{contextPath}/resource/datasource")
						= S.message("menu.resource.datasource")
				%dd
					= S.message("main.resource.datasource")

	- if (SS.anyGranted(List("ROLE_MONITORING_READONLY")))
		%section#homeMonitoring
			%h1
				= S.message("main.monitoring")
			%dl
				%dt
					%a(href="#{contextPath}/monitoring/thread") 
						= S.message("menu.monitoring.thread")
				%dd
					= S.message("main.monitoring.monitoring")
			%dl
				%dt
					%a(href="#{contextPath}/monitoring/transaction") 
						= S.message("menu.monitoring.transaction")
				%dd
					= S.message("main.monitoring.monitoring")
			%dl
				%dt
					%a(href="#{contextPath}/monitoring/mbean")
						= S.message("menu.monitoring.mbean")
				%dd
					= S.message("main.monitoring.monitoring")
			%dl
				%dt
					%a(href="#{contextPath}/monitoring/servers")
						= S.message("menu.monitoring.servers")
				%dd
					= S.message("main.monitoring.monitoring")
			%dl
				%dt
					%a(href="#{contextPath}/monitoring/jndi")
						= S.message("menu.monitoring.jndi")
				%dd
					= S.message("main.list")		

- J.init
	require(["page/home"]);