-@ val createMode: Boolean = false
-@ var model: SessionClusterConfigType

- layout("/scalate/layouts/main.scaml", Map("title" -> "message:clusters.session-cluster-config.title", "description" -> "message:clusters.session-cluster-config.description"))
	- J.base = "domain.session-cluster.specific-scope-clusters.specific-scope.session-cluster-config"
	- render("/WEB-INF/scalate/menu/session.scaml", Map("selected" -> 1))

	%form(method="post" action="#{requestUri}")
		- J.render("createMode")

		- J.render("fieldIcons")
		- J.render("buttons", Map("addition" -> List("delete")))

		- J.layout("basic")
			.table
				- J.field(schema = ".reserved-thread-num")
					- J.input()
				- J.field(schema = ".connect-timeout")
					- J.input()
					%span.unit = S.message("common.ms")
				- J.field(schema = ".read-timeout")
					- J.input()
					%span.unit = S.message("common.ms")
				- J.field(schema = ".allow-fail-back")
					- J.checkbox()
				- J.field(schema = ".backup-level")
					- J.select()
				- J.field(schema = ".backup-unit-size")
					- J.input()
				- J.field(schema = ".backup-queue-size")
					- J.input()
				- J.field(schema = ".ignore-flow-control")
					- J.checkbox()
				- J.field(schema = ".prevent-migration")
					- J.checkbox()
				- J.field(schema = ".failover-delay")
					- J.input()
					%span.unit s
				- J.field(schema = ".restart-delay")
					- J.input()
					%span.unit s	
				- J.field(schema = ".properties", path = "properties.property", example = "message:common.ex.key_equal_value")
					- J.textarea()							
			- J.group(schema = ".jeus-login-manager", noBinding = false, attributes = Map("tail" -> "checkboxForGroup"))
				.table
					- J.field(schema = ".primary")
						- J.input()
					- J.field(schema = ".secondary")
						- J.input()
			- J.group(schema = ".passivation")
				.table
					- J.field(schema = ".file-path")
						- J.input()
					- J.field(schema = ".single-folder-file-limit")
						- J.input()
					- J.field(schema = ".min-hole")
						- J.input()
					- J.field(schema = ".packing-rate")
						- J.input()
					- J.field(schema = ".ratio")
						- J.input()
				- J.group(schema = ".trigger")
					.table
						- J.field(schema = ".timeout")
							- J.input()
						- J.field(schema = ".count-threshold")
							- J.input()
						- J.field(schema = ".memory-threshold")
							- J.input()
		.lineBar
		- J.render("buttons", Map("addition" -> List("delete")))
