- import org.fusesource.scalate.NoValueSetException

-@ val id: String
-@ val checked: java.lang.Boolean = null
-@ val path: String = null
-@ val paths: List[String] = if(path != null) List(path) else throw new NoValueSetException("path or paths")
-@ val modelAttribute: String = S.modelAttribute

- val _checked: Boolean = if(checked == null) paths.exists(p => J.checkNullInstance(modelAttribute, p)) else checked
%input.eventChange{:type => "checkbox", :disabled => {!hasLock}, :checked => {_checked}, :value => "true", "data-group-id" => id}
- if (hasLock)
	- paths.foreach
		- (p) =>
			%input{:type => "hidden", :name => {"_" + p}}

	- J.init
		:plain
			require(["init/checkbox"]);
			require(["jeus/checkbox"], function(checkbox){
				checkbox.init();	
			});
